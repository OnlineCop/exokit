'use strict';Object.defineProperty(exports,"__esModule",{value:!0});/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */var _Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
for(var e=[],t=0;256>t;t++)e[t]=(16>t?"0":"")+t.toString(16);return function(){var t=0|4294967295*Math.random(),n=0|4294967295*Math.random(),a=0|4294967295*Math.random(),r=0|4294967295*Math.random(),o=e[255&t]+e[255&t>>8]+e[255&t>>16]+e[255&t>>24]+"-"+e[255&n]+e[255&n>>8]+"-"+e[64|15&n>>16]+e[255&n>>24]+"-"+e[128|63&a]+e[255&a>>8]+"-"+e[255&a>>16]+e[255&a>>24]+e[255&r]+e[255&r>>8]+e[255&r>>16]+e[255&r>>24];// .toUpperCase() here flattens concatenated strings to save heap memory space.
return o.toUpperCase()}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},// compute euclidian modulo of m % n
// https://en.wikipedia.org/wiki/Modulo_operation
euclideanModulo:function(e,t){return(e%t+t)%t},// Linear mapping from range <a1, a2> to range <b1, b2>
mapLinear:function(e,t,n,a,r){return a+(e-t)*(r-a)/(n-t)},// https://en.wikipedia.org/wiki/Linear_interpolation
lerp:function(e,n,a){return(1-a)*e+a*n},// http://en.wikipedia.org/wiki/Smoothstep
smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(6*e-15)+10))},// Random integer from <low, high> interval
randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},// Random float from <low, high> interval
randFloat:function(e,t){return e+Math.random()*(t-e)},// Random float from <-range/2, range/2> interval
randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*_Math.DEG2RAD},radToDeg:function(e){return e*_Math.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}};/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */function Quaternion(e,t,n,a){this._x=e||0,this._y=t||0,this._z=n||0,this._w=a===void 0?1:a}Object.assign(Quaternion,{slerp:function(e,n,a,r){return a.copy(e).slerp(n,r)},slerpFlat:function(e,n,a,r,o,i,m){var l=Math.sin,x=Math.atan2,y=Math.sqrt,c=Number.EPSILON,d=a[r+0],z=a[r+1],p=a[r+2],u=a[r+3],_=o[i+0],g=o[i+1],w=o[i+2],h=o[i+3];if(u!==h||d!==_||z!==g||p!==w){var b=1-m,E=d*_+z*g+p*w+u*h,S=0<=E?1:-1,C=1-E*E;// Skip the Slerp for tiny steps to avoid numeric problems:
if(C>c){var T=y(C),M=x(T,E*S);b=l(b*M)/T,m=l(m*M)/T}var V=m*S;// Normalize in case we just did a lerp:
if(d=d*b+_*V,z=z*b+g*V,p=p*b+w*V,u=u*b+h*V,b==1-m){var P=1/y(d*d+z*z+p*p+u*u);d*=P,z*=P,p*=P,u*=P}}e[n]=d,e[n+1]=z,e[n+2]=p,e[n+3]=u}}),Object.defineProperties(Quaternion.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(Quaternion.prototype,{isQuaternion:!0,set:function(e,t,n,a){return this._x=e,this._y=t,this._z=n,this._w=a,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){var n=Math.cos,a=Math.sin;if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=e._x,o=e._y,i=e._z,s=e.order,m=n,l=a,x=m(r/2),y=m(o/2),c=m(i/2),d=l(r/2),z=l(o/2),p=l(i/2);// http://www.mathworks.com/matlabcentral/fileexchange/
// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
//	content/SpinCalc.m
return"XYZ"===s?(this._x=d*y*c+x*z*p,this._y=x*z*c-d*y*p,this._z=x*y*p+d*z*c,this._w=x*y*c-d*z*p):"YXZ"===s?(this._x=d*y*c+x*z*p,this._y=x*z*c-d*y*p,this._z=x*y*p-d*z*c,this._w=x*y*c+d*z*p):"ZXY"===s?(this._x=d*y*c-x*z*p,this._y=x*z*c+d*y*p,this._z=x*y*p+d*z*c,this._w=x*y*c-d*z*p):"ZYX"===s?(this._x=d*y*c-x*z*p,this._y=x*z*c+d*y*p,this._z=x*y*p-d*z*c,this._w=x*y*c+d*z*p):"YZX"===s?(this._x=d*y*c+x*z*p,this._y=x*z*c+d*y*p,this._z=x*y*p-d*z*c,this._w=x*y*c-d*z*p):"XZY"===s&&(this._x=d*y*c-x*z*p,this._y=x*z*c-d*y*p,this._z=x*y*p+d*z*c,this._w=x*y*c+d*z*p),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=Math.cos,a=Math.sin,r=t/2,o=a(r);return this._x=e.x*o,this._y=e.y*o,this._z=e.z*o,this._w=n(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var n,t=Math.sqrt,a=e.elements,r=a[0],o=a[4],i=a[8],m=a[1],l=a[5],x=a[9],y=a[2],c=a[6],d=a[10],z=r+l+d;return 0<z?(n=.5/t(z+1),this._w=.25/n,this._x=(c-x)*n,this._y=(i-y)*n,this._z=(m-o)*n):r>l&&r>d?(n=2*t(1+r-l-d),this._w=(c-x)/n,this._x=.25*n,this._y=(o+m)/n,this._z=(i+y)/n):l>d?(n=2*t(1+l-r-d),this._w=(i-y)/n,this._x=(o+m)/n,this._y=.25*n,this._z=(x+c)/n):(n=2*t(1+d-r-l),this._w=(m-o)/n,this._x=(i+y)/n,this._y=(x+c)/n,this._z=.25*n),this.onChangeCallback(),this},setFromUnitVectors:function(e,t){var n=Math.abs,a=e.dot(t)+1;return a<1e-6?(a=0,n(e.x)>n(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=a):(this._x=0,this._y=-e.z,this._z=e.y,this._w=a)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=a),this.normalize()},angleTo:function(e){return 2*Math.acos(Math.abs(_Math.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,n){var a=Math.min,r=this.angleTo(e);if(0===r)return this;var o=a(1,n/r);return this.slerp(e,o),this},inverse:function(){// quaternion is assumed to have unit length
return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this.onChangeCallback(),this},multiply:function(e,t){return void 0===t?this.multiplyQuaternions(this,e):(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t))},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm
var n=e._x,a=e._y,r=e._z,o=e._w,i=t._x,s=t._y,m=t._z,l=t._w;return this._x=n*l+o*i+a*m-r*s,this._y=a*l+o*s+r*i-n*m,this._z=r*l+o*m+n*s-a*i,this._w=o*l-n*i-a*s-r*m,this.onChangeCallback(),this},slerp:function(e,n){var t=Math.sin,a=Math.atan2,r=Math.sqrt,o=Number.EPSILON;if(0===n)return this;if(1===n)return this.copy(e);var i=this._x,m=this._y,l=this._z,x=this._w,y=x*e._w+i*e._x+m*e._y+l*e._z;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/
if(0>y?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,y=-y):this.copy(e),1<=y)return this._w=x,this._x=i,this._y=m,this._z=l,this;var c=1-y*y;if(c<=o){var d=1-n;return this._w=d*x+n*this._w,this._x=d*i+n*this._x,this._y=d*m+n*this._y,this._z=d*l+n*this._z,this.normalize()}var s=r(c),z=a(s,y),p=t((1-n)*z)/s,u=t(n*z)/s;return this._w=x*p+this._w*u,this._x=i*p+this._x*u,this._y=m*p+this._y*u,this._z=l*p+this._z*u,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */function Vector3(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}Object.assign(Vector3.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0===t?(this.x*=e.x,this.y*=e.y,this.z*=e.z,this):(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t))},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e=new Quaternion;return function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(e.setFromEuler(t))}}(),applyAxisAngle:function(){var e=new Quaternion;return function(t,n){return this.applyQuaternion(e.setFromAxisAngle(t,n))}}(),applyMatrix3:function(t){var n=this.x,a=this.y,r=this.z,o=t.elements;return this.x=o[0]*n+o[3]*a+o[6]*r,this.y=o[1]*n+o[4]*a+o[7]*r,this.z=o[2]*n+o[5]*a+o[8]*r,this},applyMatrix4:function(t){var n=this.x,a=this.y,r=this.z,o=t.elements,e=1/(o[3]*n+o[7]*a+o[11]*r+o[15]);return this.x=(o[0]*n+o[4]*a+o[8]*r+o[12])*e,this.y=(o[1]*n+o[5]*a+o[9]*r+o[13])*e,this.z=(o[2]*n+o[6]*a+o[10]*r+o[14])*e,this},applyQuaternion:function(e){var t=this.x,n=this.y,a=this.z,r=e.x,o=e.y,i=e.z,s=e.w,m=s*t+o*a-i*n,l=s*n+i*t-r*a,x=s*a+r*n-o*t,y=-r*t-o*n-i*a;return this.x=m*s+y*-r+l*-i-x*-o,this.y=l*s+y*-o+x*-r-m*-i,this.z=x*s+y*-i+m*-o-l*-r,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(t){// input: THREE.Matrix4 affine matrix
// vector interpreted as a direction
var n=this.x,a=this.y,r=this.z,o=t.elements;return this.x=o[0]*n+o[4]*a+o[8]*r,this.y=o[1]*n+o[5]*a+o[9]*r,this.z=o[2]*n+o[6]*a+o[10]*r,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){var t=Math.min;return this.x=t(this.x,e.x),this.y=t(this.y,e.y),this.z=t(this.z,e.z),this},max:function(e){var t=Math.max;return this.x=t(this.x,e.x),this.y=t(this.y,e.y),this.z=t(this.z,e.z),this},clamp:function(e,t){var n=Math.max,a=Math.min;return this.x=n(e.x,a(t.x,this.x)),this.y=n(e.y,a(t.y,this.y)),this.z=n(e.z,a(t.z,this.z)),this},clampScalar:function(e,t){var n=Math.max,a=Math.min;return this.x=n(e,a(t,this.x)),this.y=n(e,a(t,this.y)),this.z=n(e,a(t,this.z)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){var e=Math.floor;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this},ceil:function(){var e=Math.ceil;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this},round:function(){var e=Math.round;return this.x=e(this.x),this.y=e(this.y),this.z=e(this.z),this},roundToZero:function(){var e=Math.ceil,t=Math.floor;return this.x=0>this.x?e(this.x):t(this.x),this.y=0>this.y?e(this.y):t(this.y),this.z=0>this.z?e(this.z):t(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},// TODO lengthSquared?
lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){var e=Math.abs;return e(this.x)+e(this.y)+e(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){return void 0===t?this.crossVectors(this,e):(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t))},crossVectors:function(e,t){var n=e.x,a=e.y,r=e.z,o=t.x,i=t.y,s=t.z;return this.x=a*s-r*i,this.y=r*o-n*s,this.z=n*i-a*o,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e=new Vector3;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){// reflect incident vector off plane orthogonal to normal
// normal is assumed to have unit length
var e=new Vector3;return function(t){return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());// clamp, to handle numerical problems
return Math.acos(_Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,a=this.z-e.z;return t*t+n*n+a*a},manhattanDistanceTo:function(e){var t=Math.abs;return t(this.x-e.x)+t(this.y-e.y)+t(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,n){var a=Math.cos,r=Math.sin,o=r(t)*e;return this.x=o*r(n),this.y=a(t)*e,this.z=o*a(n),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,n){var a=Math.cos,r=Math.sin;return this.x=e*r(t),this.y=n,this.z=e*a(t),this},setFromMatrixPosition:function(t){var n=t.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),a=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=a,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}});/**
 * @author bhouston / http://clara.io
 */function Ray(e,t){this.origin=e===void 0?new Vector3:e,this.direction=t===void 0?new Vector3:t}Object.assign(Ray.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new Vector3),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new Vector3;return function(n){return this.origin.copy(this.at(n,e)),this}}(),closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Vector3),t.subVectors(e,this.origin);var n=t.dot(this.direction);return 0>n?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new Vector3;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);// point behind the ray
return 0>n?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(n).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var e=Math.abs,t=Math.max,n=Math.min,a=new Vector3,r=new Vector3,o=new Vector3;return function(i,s,m,l){a.copy(i).add(s).multiplyScalar(.5),r.copy(s).sub(i).normalize(),o.copy(this.origin).sub(a);var x,y,d,z,p=.5*i.distanceTo(s),u=-this.direction.dot(r),_=o.dot(this.direction),g=-o.dot(r),w=o.lengthSq(),c=e(1-u*u);if(!(0<c))y=0<u?-p:p,x=t(0,-(u*y+_)),d=-x*x+y*(y+2*g)+w;else if(x=u*g-_,y=u*_-g,z=p*c,!(0<=x))y<=-z?(x=t(0,-(-u*p+_)),y=0<x?-p:n(t(-p,-g),p),d=-x*x+y*(y+2*g)+w):y<=z?(x=0,y=n(t(-p,-g),p),d=y*(y+2*g)+w):(x=t(0,-(u*p+_)),y=0<x?p:n(t(-p,-g),p),d=-x*x+y*(y+2*g)+w);else if(!(y>=-z))y=-p,x=t(0,-(u*y+_)),d=-x*x+y*(y+2*g)+w;else if(y<=z){// region 0
// Minimum at interior points of ray and segment.
var h=1/c;x*=h,y*=h,d=x*(x+u*y+2*_)+y*(u*x+y+2*g)+w}else// region 1
y=p,x=t(0,-(u*y+_)),d=-x*x+y*(y+2*g)+w;return m&&m.copy(this.direction).multiplyScalar(x).add(this.origin),l&&l.copy(r).multiplyScalar(y).add(a),d}}(),intersectSphere:function(){var e=new Vector3;return function(t,n){e.subVectors(t.center,this.origin);var a=e.dot(this.direction),r=e.dot(e)-a*a,o=t.radius*t.radius;if(r>o)return null;var i=Math.sqrt(o-r),s=a-i,m=a+i;// t0 = first intersect point - entrance on front of sphere
// test to see if both t0 and t1 are behind the ray - if so, return null
return 0>s&&0>m?null:0>s?this.at(m,n):this.at(s,n);// test to see if t0 is behind the ray:
// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
// in order to always return an intersect point that is in front of the ray.
// else t0 is in front of the ray, so return the first collision point scaled by t0
}}(),intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){var n=e.normal.dot(this.direction);if(0===n)// line is coplanar, return origin
return 0===e.distanceToPoint(this.origin)?0:null;// Null is preferable to undefined since undefined means.... it is undefined
var a=-(this.origin.dot(e.normal)+e.constant)/n;// Return if the ray never intersects the plane
return 0<=a?a:null},intersectPlane:function(e,n){var a=this.distanceToPlane(e);return null===a?null:this.at(a,n)},intersectsPlane:function(e){// check if the ray lies on the plane first
var t=e.distanceToPoint(this.origin);if(0===t)return!0;var n=e.normal.dot(this.direction);return!!(0>n*t);// ray origin is behind the plane (and is pointing behind it)
},intersectBox:function(e,t){var n,a,r,o,i,s,m=1/this.direction.x,l=1/this.direction.y,x=1/this.direction.z,y=this.origin;return(0<=m?(n=(e.min.x-y.x)*m,a=(e.max.x-y.x)*m):(n=(e.max.x-y.x)*m,a=(e.min.x-y.x)*m),0<=l?(r=(e.min.y-y.y)*l,o=(e.max.y-y.y)*l):(r=(e.max.y-y.y)*l,o=(e.min.y-y.y)*l),n>o||r>a)?null:((r>n||n!=n)&&(n=r),(o<a||a!=a)&&(a=o),0<=x?(i=(e.min.z-y.z)*x,s=(e.max.z-y.z)*x):(i=(e.max.z-y.z)*x,s=(e.min.z-y.z)*x),n>s||i>a)?null:((i>n||n!=n)&&(n=i),(s<a||a!=a)&&(a=s),0>a?null:this.at(0<=n?n:a,t));// These lines also handle the case where tmin or tmax is NaN
// (result of 0 * Infinity). x !== x returns true if x is NaN
},intersectsBox:function(){var e=new Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectTriangle:function(){// Compute the offset origin, edges, and normal.
var e=new Vector3,t=new Vector3,n=new Vector3,r=new Vector3;return function(o,a,i,s,m){t.subVectors(a,o),n.subVectors(i,o),r.crossVectors(t,n);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
var l,x=this.direction.dot(r);if(0<x){if(s)return null;l=1}else if(0>x)l=-1,x=-x;else return null;e.subVectors(this.origin,o);var y=l*this.direction.dot(n.crossVectors(e,n));// b1 < 0, no intersection
if(0>y)return null;var c=l*this.direction.dot(t.cross(e));// b2 < 0, no intersection
if(0>c)return null;// b1+b2 > 1, no intersection
if(y+c>x)return null;// Line intersects triangle, check if ray does.
var d=-l*e.dot(r);// t < 0, no intersection
return 0>d?null:this.at(d/x,m);// Ray intersects triangle.
}}(),applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author jordi_ros / http://plattsoft.com
 * @author D1plo1d / http://github.com/D1plo1d
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author timknip / http://www.floorplanner.com/
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Matrix4.prototype,{isMatrix4:!0,set:function(e,t,n,a,r,o,i,s,m,l,x,y,c,d,z,p){var u=this.elements;return u[0]=e,u[4]=t,u[8]=n,u[12]=a,u[1]=r,u[5]=o,u[9]=i,u[13]=s,u[2]=m,u[6]=l,u[10]=x,u[14]=y,u[3]=c,u[7]=d,u[11]=z,u[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new Matrix4().fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e=new Vector3;return function(t){// this method does not support reflection matrices
var n=this.elements,a=t.elements,r=1/e.setFromMatrixColumn(t,0).length(),o=1/e.setFromMatrixColumn(t,1).length(),i=1/e.setFromMatrixColumn(t,2).length();return n[0]=a[0]*r,n[1]=a[1]*r,n[2]=a[2]*r,n[3]=0,n[4]=a[4]*o,n[5]=a[5]*o,n[6]=a[6]*o,n[7]=0,n[8]=a[8]*i,n[9]=a[9]*i,n[10]=a[10]*i,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}}(),makeRotationFromEuler:function(t){var n=Math.cos,r=Math.sin;t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var o=this.elements,i=t.x,s=t.y,m=t.z,l=n(i),a=r(i),x=n(s),y=r(s),c=n(m),e=r(m);if("XYZ"===t.order){var d=l*c,z=l*e,p=a*c,u=a*e;o[0]=x*c,o[4]=-x*e,o[8]=y,o[1]=z+p*y,o[5]=d-u*y,o[9]=-a*x,o[2]=u-d*y,o[6]=p+z*y,o[10]=l*x}else if("YXZ"===t.order){var _=x*c,g=x*e,w=y*c,h=y*e;o[0]=_+h*a,o[4]=w*a-g,o[8]=l*y,o[1]=l*e,o[5]=l*c,o[9]=-a,o[2]=g*a-w,o[6]=h+_*a,o[10]=l*x}else if("ZXY"===t.order){var _=x*c,g=x*e,w=y*c,h=y*e;o[0]=_-h*a,o[4]=-l*e,o[8]=w+g*a,o[1]=g+w*a,o[5]=l*c,o[9]=h-_*a,o[2]=-l*y,o[6]=a,o[10]=l*x}else if("ZYX"===t.order){var d=l*c,z=l*e,p=a*c,u=a*e;o[0]=x*c,o[4]=p*y-z,o[8]=d*y+u,o[1]=x*e,o[5]=u*y+d,o[9]=z*y-p,o[2]=-y,o[6]=a*x,o[10]=l*x}else if("YZX"===t.order){var b=l*x,E=l*y,f=a*x,S=a*y;o[0]=x*c,o[4]=S-b*e,o[8]=f*e+E,o[1]=e,o[5]=l*c,o[9]=-a*c,o[2]=-y*c,o[6]=E*e+f,o[10]=b-S*e}else if("XZY"===t.order){var b=l*x,E=l*y,f=a*x,S=a*y;o[0]=x*c,o[4]=-e,o[8]=y*c,o[1]=b*e+S,o[5]=l*c,o[9]=E*e-f,o[2]=f*e-E,o[6]=a*c,o[10]=S*e+b}// bottom row
return o[3]=0,o[7]=0,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,this},makeRotationFromQuaternion:function(){var e=new Vector3(0,0,0),t=new Vector3(1,1,1);return function(n){return this.compose(e,n,t)}}(),lookAt:function(){var e=Math.abs,t=new Vector3,n=new Vector3,a=new Vector3;return function(r,o,i){var s=this.elements;return a.subVectors(r,o),0===a.lengthSq()&&(a.z=1),a.normalize(),t.crossVectors(i,a),0===t.lengthSq()&&(1===e(i.z)?a.x+=1e-4:a.z+=1e-4,a.normalize(),t.crossVectors(i,a)),t.normalize(),n.crossVectors(a,t),s[0]=t.x,s[4]=n.x,s[8]=a.x,s[1]=t.y,s[5]=n.y,s[9]=a.y,s[2]=t.z,s[6]=n.z,s[10]=a.z,this}}(),multiply:function(e,t){return void 0===t?this.multiplyMatrices(this,e):(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t))},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,a=t.elements,r=this.elements,o=n[0],i=n[4],s=n[8],m=n[12],l=n[1],x=n[5],y=n[9],c=n[13],d=n[2],z=n[6],p=n[10],u=n[14],_=n[3],g=n[7],w=n[11],h=n[15],b=a[0],E=a[4],f=a[8],S=a[12],C=a[1],T=a[5],M=a[9],V=a[13],P=a[2],q=a[6],R=a[10],F=a[14],k=a[3],A=a[7],B=a[11],H=a[15];return r[0]=o*b+i*C+s*P+m*k,r[4]=o*E+i*T+s*q+m*A,r[8]=o*f+i*M+s*R+m*B,r[12]=o*S+i*V+s*F+m*H,r[1]=l*b+x*C+y*P+c*k,r[5]=l*E+x*T+y*q+c*A,r[9]=l*f+x*M+y*R+c*B,r[13]=l*S+x*V+y*F+c*H,r[2]=d*b+z*C+p*P+u*k,r[6]=d*E+z*T+p*q+u*A,r[10]=d*f+z*M+p*R+u*B,r[14]=d*S+z*V+p*F+u*H,r[3]=_*b+g*C+w*P+h*k,r[7]=_*E+g*T+w*q+h*A,r[11]=_*f+g*M+w*R+h*B,r[15]=_*S+g*V+w*F+h*H,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToBufferAttribute:function(){var e=new Vector3;return function(t){for(var n=0,a=t.count;n<a;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix4(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],n=e[4],a=e[8],r=e[12],o=e[1],i=e[5],s=e[9],m=e[13],l=e[2],x=e[6],y=e[10],c=e[14],d=e[3],z=e[7],p=e[11],u=e[15];//TODO: make this more efficient
//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )
return d*(+r*s*x-a*m*x-r*i*y+n*m*y+a*i*c-n*s*c)+z*(+t*s*c-t*m*y+r*o*y-a*o*c+a*m*l-r*s*l)+p*(+t*m*x-t*i*c-r*o*x+n*o*c+r*i*l-n*m*l)+u*(-a*i*l-t*s*x+t*i*y+a*o*x-n*o*y+n*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
var n=this.elements,a=e.elements,r=a[0],o=a[1],i=a[2],s=a[3],m=a[4],l=a[5],x=a[6],y=a[7],c=a[8],d=a[9],z=a[10],p=a[11],u=a[12],_=a[13],g=a[14],w=a[15],h=d*g*y-_*z*y+_*x*p-l*g*p-d*x*w+l*z*w,b=u*z*y-c*g*y-u*x*p+m*g*p+c*x*w-m*z*w,E=c*_*y-u*d*y+u*l*p-m*_*p-c*l*w+m*d*w,f=u*d*x-c*_*x-u*l*z+m*_*z+c*l*g-m*d*g,S=r*h+o*b+i*E+s*f;if(0===S){if(!0===t)throw new Error("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0");else console.warn("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0");return this.identity()}var C=1/S;return n[0]=h*C,n[1]=(_*z*s-d*g*s-_*i*p+o*g*p+d*i*w-o*z*w)*C,n[2]=(l*g*s-_*x*s+_*i*y-o*g*y-l*i*w+o*x*w)*C,n[3]=(d*x*s-l*z*s-d*i*y+o*z*y+l*i*p-o*x*p)*C,n[4]=b*C,n[5]=(c*g*s-u*z*s+u*i*p-r*g*p-c*i*w+r*z*w)*C,n[6]=(u*x*s-m*g*s-u*i*y+r*g*y+m*i*w-r*x*w)*C,n[7]=(m*z*s-c*x*s+c*i*y-r*z*y-m*i*p+r*x*p)*C,n[8]=E*C,n[9]=(u*d*s-c*_*s-u*o*p+r*_*p+c*o*w-r*d*w)*C,n[10]=(m*_*s-u*l*s+u*o*y-r*_*y-m*o*w+r*l*w)*C,n[11]=(c*l*s-m*d*s-c*o*y+r*d*y+m*o*p-r*l*p)*C,n[12]=f*C,n[13]=(c*_*i-u*d*i+u*o*z-r*_*z-c*o*g+r*d*g)*C,n[14]=(u*l*i-m*_*i-u*o*x+r*_*x+m*o*g-r*l*g)*C,n[15]=(m*d*i-c*l*i+c*o*x-r*d*x-m*o*z+r*l*z)*C,this},scale:function(e){var t=this.elements,n=e.x,a=e.y,r=e.z;return t[0]*=n,t[4]*=a,t[8]*=r,t[1]*=n,t[5]*=a,t[9]*=r,t[2]*=n,t[6]*=a,t[10]*=r,t[3]*=n,t[7]*=a,t[11]*=r,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],a=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,a))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos,n=Math.sin,a=t(e),r=n(e);return this.set(1,0,0,0,0,a,-r,0,0,r,a,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos,n=Math.sin,a=t(e),r=n(e);return this.set(a,0,r,0,0,1,0,0,-r,0,a,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos,n=Math.sin,a=t(e),r=n(e);return this.set(a,-r,0,0,r,a,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,n){var a=Math.cos,r=Math.sin,o=a(n),i=r(n),s=1-o,t=e.x,m=e.y,l=e.z,x=s*t,y=s*m;return this.set(x*t+o,x*m-i*l,x*l+i*m,0,x*m+i*l,y*m+o,y*l-i*t,0,x*l-i*m,y*l+i*t,s*l*l+o,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){var a=this.elements,r=t._x,o=t._y,i=t._z,s=t._w,m=r+r,l=o+o,x=i+i,y=r*m,c=r*l,d=r*x,z=o*l,p=o*x,u=i*x,_=s*m,g=s*l,w=s*x,h=n.x,b=n.y,E=n.z;return a[0]=(1-(z+u))*h,a[1]=(c+w)*h,a[2]=(d-g)*h,a[3]=0,a[4]=(c-w)*b,a[5]=(1-(y+u))*b,a[6]=(p+_)*b,a[7]=0,a[8]=(d+g)*E,a[9]=(p-_)*E,a[10]=(1-(y+z))*E,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,this},decompose:function(){var e=new Vector3,t=new Matrix4;return function(n,a,r){var o=this.elements,i=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),m=e.set(o[8],o[9],o[10]).length(),l=this.determinant();0>l&&(i=-i),n.x=o[12],n.y=o[13],n.z=o[14],t.copy(this);var x=1/i,y=1/s,c=1/m;return t.elements[0]*=x,t.elements[1]*=x,t.elements[2]*=x,t.elements[4]*=y,t.elements[5]*=y,t.elements[6]*=y,t.elements[8]*=c,t.elements[9]*=c,t.elements[10]*=c,a.setFromRotationMatrix(t),r.x=i,r.y=s,r.z=m,this}}(),makePerspective:function(e,t,n,a,r,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var i=this.elements;return i[0]=2*r/(t-e),i[4]=0,i[8]=(t+e)/(t-e),i[12]=0,i[1]=0,i[5]=2*r/(n-a),i[9]=(n+a)/(n-a),i[13]=0,i[2]=0,i[6]=0,i[10]=-(o+r)/(o-r),i[14]=-2*o*r/(o-r),i[3]=0,i[7]=0,i[11]=-1,i[15]=0,this},makeOrthographic:function(e,t,n,a,r,o){var i=this.elements,s=1/(t-e),m=1/(n-a),l=1/(o-r);return i[0]=2*s,i[4]=0,i[8]=0,i[12]=-((t+e)*s),i[1]=0,i[5]=2*m,i[9]=0,i[13]=-((n+a)*m),i[2]=0,i[6]=0,i[10]=-2*l,i[14]=-((o+r)*l),i[3]=0,i[7]=0,i[11]=0,i[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,a=0;16>a;a++)if(t[a]!==n[a])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;16>n;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}});/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */function Box3(e,t){this.min=e===void 0?new Vector3(+Infinity,+Infinity,+Infinity):e,this.max=t===void 0?new Vector3(-Infinity,-Infinity,-Infinity):t}Object.assign(Box3.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=+Infinity,n=+Infinity,a=+Infinity,r=-Infinity,o=-Infinity,s=-Infinity,m=0,c=e.length;m<c;m+=3){var l=e[m],x=e[m+1],y=e[m+2];l<t&&(t=l),x<n&&(n=x),y<a&&(a=y),l>r&&(r=l),x>o&&(o=x),y>s&&(s=y)}return this.min.set(t,n,a),this.max.set(r,o,s),this},setFromBufferAttribute:function(e){for(var t=+Infinity,n=+Infinity,a=+Infinity,r=-Infinity,o=-Infinity,s=-Infinity,m=0,c=e.count;m<c;m++){var l=e.getX(m),x=e.getY(m),y=e.getZ(m);l<t&&(t=l),x<n&&(n=x),y<a&&(a=y),l>r&&(r=l),x>o&&(o=x),y>s&&(s=y)}return this.min.set(t,n,a),this.max.set(r,o,s),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new Vector3;return function(t,n){var a=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(a),this.max.copy(t).add(a),this}}(),setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},isEmpty:function(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(){function e(e){var o=e.geometry;if(o!==void 0)if(o.isGeometry){var i=o.vertices;for(n=0,a=i.length;n<a;n++)r.copy(i[n]),r.applyMatrix4(e.matrixWorld),t.expandByPoint(r)}else if(o.isBufferGeometry){var s=o.attributes.position;if(void 0!==s)for(n=0,a=s.count;n<a;n++)r.fromBufferAttribute(s,n).applyMatrix4(e.matrixWorld),t.expandByPoint(r)}}// Computes the world-axis-aligned bounding box of an object (including its children),
// accounting for both the object's, and children's, world transforms
var t,n,a,r=new Vector3;return function(n){return t=this,n.updateMatrixWorld(!0),n.traverse(e),this}}(),containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Vector3),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){// using 6 splitting planes to rule out intersections.
return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(){var e=new Vector3;return function(t){// If that point is inside the sphere, the AABB and sphere intersect.
return this.clampPoint(t.center,e),e.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(e){// We compute the minimum and maximum dot product values. If those values
// are on the same side (back or front) of the plane, then there is no intersection.
var t,n;return 0<e.normal.x?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant},intersectsTriangle:function(){var t=Math.abs,n=Math.max;function e(e){var m,x;for(m=0,x=e.length-3;m<=x;m+=3){l.fromArray(e,m);// project the aabb onto the seperating axis
var c=y.x*t(l.x)+y.y*t(l.y)+y.z*t(l.z),r=a.dot(l),d=o.dot(l),z=s.dot(l);// project all 3 vertices of the triangle onto the seperating axis
// actual test, basically see if either of the most extreme of the triangle points intersects r
if(n(-n(r,d,z),Math.min(r,d,z))>c)// points of the projected triangle are outside the projected half-length of the aabb
// the axis is seperating and we can exit
return!1}return!0}// triangle centered vertices
var a=new Vector3,o=new Vector3,s=new Vector3,r=new Vector3,i=new Vector3,m=new Vector3,l=new Vector3,x=new Vector3,y=new Vector3,c=new Vector3;return function(t){if(this.isEmpty())return!1;// compute box center and extents
this.getCenter(x),y.subVectors(this.max,x),a.subVectors(t.a,x),o.subVectors(t.b,x),s.subVectors(t.c,x),r.subVectors(o,a),i.subVectors(s,o),m.subVectors(a,s);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb
// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation
// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)
var n=[0,-r.z,r.y,0,-i.z,i.y,0,-m.z,m.y,r.z,0,-r.x,i.z,0,-i.x,m.z,0,-m.x,-r.y,r.x,0,-i.y,i.x,0,-m.y,m.x,0];return!!e(n)&&(n=[1,0,0,0,1,0,0,0,1],!!e(n))&&(c.crossVectors(r,i),n=[c.x,c.y,c.z],e(n));// test 3 face normals from the aabb
// finally testing the face normal of the triangle
// use already existing triangle edge vectors here
}}(),clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Vector3),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Vector3;return function(t){var n=e.copy(t).clamp(this.min,this.max);return n.sub(t).length()}}(),getBoundingSphere:function(){var e=new Vector3;return function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3];return function(t){// transform of empty box is an empty box.
return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(e),this);// NOTE: I am using a binary pattern to specify all 2^3 combinations below
}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),exports.Box3=Box3,exports.Matrix4=Matrix4,exports.Quaternion=Quaternion,exports.Ray=Ray,exports.Vector3=Vector3;
